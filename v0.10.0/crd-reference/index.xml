<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>kcp - a multi-tenant control plane for Kubernetes APIs – CRD Reference</title><link>http://kcp-dev.github.io/kcp/v0.10.0/crd-reference/</link><description>Recent content in CRD Reference on kcp - a multi-tenant control plane for Kubernetes APIs</description><generator>Hugo -- gohugo.io</generator><atom:link href="http://kcp-dev.github.io/kcp/v0.10.0/crd-reference/index.xml" rel="self" type="application/rss+xml"/><item><title>V0.10.0: APIBinding CRD schema reference (group apis.kcp.io)</title><link>http://kcp-dev.github.io/kcp/v0.10.0/crd-reference/apibindings.apis.kcp.io/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://kcp-dev.github.io/kcp/v0.10.0/crd-reference/apibindings.apis.kcp.io/</guid><description>
&lt;h2 id="apibinding">APIBinding&lt;/h2>
&lt;dl class="crd-meta">
&lt;dt class="fullname">Full name:&lt;/dt>
&lt;dd class="fullname">apibindings.apis.kcp.io&lt;/dd>
&lt;dt class="groupname">Group:&lt;/dt>
&lt;dd class="groupname">apis.kcp.io&lt;/dd>
&lt;dt class="singularname">Singular name:&lt;/dt>
&lt;dd class="singularname">apibinding&lt;/dd>
&lt;dt class="pluralname">Plural name:&lt;/dt>
&lt;dd class="pluralname">apibindings&lt;/dd>
&lt;dt class="scope">Scope:&lt;/dt>
&lt;dd class="scope">Cluster&lt;/dd>
&lt;dt class="versions">Versions:&lt;/dt>
&lt;dd class="versions">&lt;a class="version" href="#v1alpha1" title="Show schema for version v1alpha1">v1alpha1&lt;/a>&lt;/dd>
&lt;/dl>
&lt;div class="crd-schema-version">
&lt;h2 id="v1alpha1">Version v1alpha1&lt;/h2>
&lt;h3 id="property-details-v1alpha1">Properties&lt;/h3>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.apiVersion">.apiVersion&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: &lt;a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources">https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources&lt;/a>&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.kind">.kind&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: &lt;a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds">https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds&lt;/a>&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.metadata">.metadata&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec">.spec&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Spec holds the desired state.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.permissionClaims">.spec.permissionClaims&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>permissionClaims records decisions about permission claims requested by the API service provider. Individual claims can be accepted or rejected. If accepted, the API service provider gets the requested access to the specified resources in this workspace. Access is granted per GroupResource, identity, and other properties.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.permissionClaims[*]">.spec.permissionClaims[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>AcceptablePermissionClaim is a PermissionClaim that records if the user accepts or rejects it.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.permissionClaims[*].all">.spec.permissionClaims[*].all&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">boolean&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>all claims all resources for the given group/resource. This is mutually exclusive with resourceSelector.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.permissionClaims[*].group">.spec.permissionClaims[*].group&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>group is the name of an API group. For core groups this is the empty string &amp;lsquo;&amp;ldquo;&amp;rdquo;&amp;rsquo;.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.permissionClaims[*].identityHash">.spec.permissionClaims[*].identityHash&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>This is the identity for a given APIExport that the APIResourceSchema belongs to. The hash can be found on APIExport and APIResourceSchema&amp;rsquo;s status. It will be empty for core types. Note that one must look this up for a particular KCP instance.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.permissionClaims[*].resource">.spec.permissionClaims[*].resource&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>resource is the name of the resource. Note: it is worth noting that you can not ask for permissions for resource provided by a CRD not provided by an api export.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.permissionClaims[*].resourceSelector">.spec.permissionClaims[*].resourceSelector&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>resourceSelector is a list of claimed resource selectors.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-4">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.permissionClaims[*].resourceSelector[*]">.spec.permissionClaims[*].resourceSelector[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-5">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.permissionClaims[*].resourceSelector[*].name">.spec.permissionClaims[*].resourceSelector[*].name&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>name of an object within a claimed group/resource. It matches the metadata.name field of the underlying object. If namespace is unset, all objects matching that name will be claimed.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-5">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.permissionClaims[*].resourceSelector[*].namespace">.spec.permissionClaims[*].resourceSelector[*].namespace&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>namespace containing the named object. Matches metadata.namespace field. If &amp;ldquo;name&amp;rdquo; is unset, all objects from the namespace are being claimed.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.permissionClaims[*].state">.spec.permissionClaims[*].state&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.reference">.spec.reference&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>reference uniquely identifies an API to bind to.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.reference.export">.spec.reference.export&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>export is a reference to an APIExport by cluster name and export name. The creator of the APIBinding needs to have access to the APIExport with the verb &lt;code>bind&lt;/code> in order to bind to it.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.reference.export.name">.spec.reference.export.name&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>name is the name of the APIExport that describes the API.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.reference.export.path">.spec.reference.export.path&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>path is a logical cluster path where the APIExport is defined. If the path is unset, the logical cluster of the APIBinding is used.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status">.status&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Status communicates the observed state.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.apiExportClusterName">.status.apiExportClusterName&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>APIExportClusterName records the name (not path) of the logical cluster that contains the APIExport.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.appliedPermissionClaims">.status.appliedPermissionClaims&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>appliedPermissionClaims is a list of the permission claims the system has seen and applied, according to the requests of the API service provider in the APIExport and the acceptance state in spec.permissionClaims.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.appliedPermissionClaims[*]">.status.appliedPermissionClaims[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>PermissionClaim identifies an object by GR and identity hash. Its purpose is to determine the added permissions that a service provider may request and that a consumer may accept and allow the service provider access to.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.appliedPermissionClaims[*].all">.status.appliedPermissionClaims[*].all&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">boolean&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>all claims all resources for the given group/resource. This is mutually exclusive with resourceSelector.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.appliedPermissionClaims[*].group">.status.appliedPermissionClaims[*].group&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>group is the name of an API group. For core groups this is the empty string &amp;lsquo;&amp;ldquo;&amp;rdquo;&amp;rsquo;.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.appliedPermissionClaims[*].identityHash">.status.appliedPermissionClaims[*].identityHash&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>This is the identity for a given APIExport that the APIResourceSchema belongs to. The hash can be found on APIExport and APIResourceSchema&amp;rsquo;s status. It will be empty for core types. Note that one must look this up for a particular KCP instance.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.appliedPermissionClaims[*].resource">.status.appliedPermissionClaims[*].resource&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>resource is the name of the resource. Note: it is worth noting that you can not ask for permissions for resource provided by a CRD not provided by an api export.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.appliedPermissionClaims[*].resourceSelector">.status.appliedPermissionClaims[*].resourceSelector&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>resourceSelector is a list of claimed resource selectors.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-4">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.appliedPermissionClaims[*].resourceSelector[*]">.status.appliedPermissionClaims[*].resourceSelector[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-5">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.appliedPermissionClaims[*].resourceSelector[*].name">.status.appliedPermissionClaims[*].resourceSelector[*].name&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>name of an object within a claimed group/resource. It matches the metadata.name field of the underlying object. If namespace is unset, all objects matching that name will be claimed.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-5">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.appliedPermissionClaims[*].resourceSelector[*].namespace">.status.appliedPermissionClaims[*].resourceSelector[*].namespace&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>namespace containing the named object. Matches metadata.namespace field. If &amp;ldquo;name&amp;rdquo; is unset, all objects from the namespace are being claimed.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.boundResources">.status.boundResources&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>boundResources records the state of bound APIs.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.boundResources[*]">.status.boundResources[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>BoundAPIResource describes a bound GroupVersionResource through an APIResourceSchema of an APIExport..&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.boundResources[*].group">.status.boundResources[*].group&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>group is the group of the bound API. Empty string for the core API group.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.boundResources[*].resource">.status.boundResources[*].resource&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>resource is the resource of the bound API.
kubebuilder:validation:MinLength=1&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.boundResources[*].schema">.status.boundResources[*].schema&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Schema references the APIResourceSchema that is bound to this API.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-4">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.boundResources[*].schema.UID">.status.boundResources[*].schema.UID&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>UID is the UID of the APIResourceSchema that is bound to this API.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-4">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.boundResources[*].schema.identityHash">.status.boundResources[*].schema.identityHash&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>identityHash is the hash of the API identity that this schema is bound to. The API identity determines the etcd prefix used to persist the object. Different identity means that the objects are effectively served and stored under a distinct resource. A CRD of the same GroupVersionResource uses a different identity and hence a separate etcd prefix.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-4">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.boundResources[*].schema.name">.status.boundResources[*].schema.name&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>name is the bound APIResourceSchema name.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.boundResources[*].storageVersions">.status.boundResources[*].storageVersions&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>storageVersions lists all versions of a resource that were ever persisted. Tracking these versions allows a migration path for stored versions in etcd. The field is mutable so a migration controller can finish a migration to another version (ensuring no old objects are left in storage), and then remove the rest of the versions from this list.
Versions may not be removed while they exist in this list.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-4">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.boundResources[*].storageVersions[*]">.status.boundResources[*].storageVersions[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions">.status.conditions&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>conditions is a list of conditions that apply to the APIBinding.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*]">.status.conditions[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Condition defines an observation of a object operational state.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].lastTransitionTime">.status.conditions[*].lastTransitionTime&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].message">.status.conditions[*].message&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>A human readable message indicating details about the transition. This field may be empty.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].reason">.status.conditions[*].reason&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>The reason for the condition&amp;rsquo;s last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].severity">.status.conditions[*].severity&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].status">.status.conditions[*].status&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Status of the condition, one of True, False, Unknown.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].type">.status.conditions[*].type&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.exportPermissionClaims">.status.exportPermissionClaims&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>exportPermissionClaims records the permissions that the export provider is asking for the binding to grant.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.exportPermissionClaims[*]">.status.exportPermissionClaims[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>PermissionClaim identifies an object by GR and identity hash. Its purpose is to determine the added permissions that a service provider may request and that a consumer may accept and allow the service provider access to.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.exportPermissionClaims[*].all">.status.exportPermissionClaims[*].all&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">boolean&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>all claims all resources for the given group/resource. This is mutually exclusive with resourceSelector.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.exportPermissionClaims[*].group">.status.exportPermissionClaims[*].group&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>group is the name of an API group. For core groups this is the empty string &amp;lsquo;&amp;ldquo;&amp;rdquo;&amp;rsquo;.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.exportPermissionClaims[*].identityHash">.status.exportPermissionClaims[*].identityHash&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>This is the identity for a given APIExport that the APIResourceSchema belongs to. The hash can be found on APIExport and APIResourceSchema&amp;rsquo;s status. It will be empty for core types. Note that one must look this up for a particular KCP instance.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.exportPermissionClaims[*].resource">.status.exportPermissionClaims[*].resource&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>resource is the name of the resource. Note: it is worth noting that you can not ask for permissions for resource provided by a CRD not provided by an api export.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.exportPermissionClaims[*].resourceSelector">.status.exportPermissionClaims[*].resourceSelector&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>resourceSelector is a list of claimed resource selectors.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-4">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.exportPermissionClaims[*].resourceSelector[*]">.status.exportPermissionClaims[*].resourceSelector[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-5">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.exportPermissionClaims[*].resourceSelector[*].name">.status.exportPermissionClaims[*].resourceSelector[*].name&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>name of an object within a claimed group/resource. It matches the metadata.name field of the underlying object. If namespace is unset, all objects matching that name will be claimed.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-5">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.exportPermissionClaims[*].resourceSelector[*].namespace">.status.exportPermissionClaims[*].resourceSelector[*].namespace&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>namespace containing the named object. Matches metadata.namespace field. If &amp;ldquo;name&amp;rdquo; is unset, all objects from the namespace are being claimed.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.phase">.status.phase&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>phase is the current phase of the APIBinding: - &amp;ldquo;&amp;rdquo;: the APIBinding has just been created, waiting to be bound. - Binding: the APIBinding is being bound. - Bound: the APIBinding is bound and the referenced APIs are available in the workspace.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>V0.10.0: APIExport CRD schema reference (group apis.kcp.io)</title><link>http://kcp-dev.github.io/kcp/v0.10.0/crd-reference/apiexports.apis.kcp.io/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://kcp-dev.github.io/kcp/v0.10.0/crd-reference/apiexports.apis.kcp.io/</guid><description>
&lt;h2 id="apiexport">APIExport&lt;/h2>
&lt;dl class="crd-meta">
&lt;dt class="fullname">Full name:&lt;/dt>
&lt;dd class="fullname">apiexports.apis.kcp.io&lt;/dd>
&lt;dt class="groupname">Group:&lt;/dt>
&lt;dd class="groupname">apis.kcp.io&lt;/dd>
&lt;dt class="singularname">Singular name:&lt;/dt>
&lt;dd class="singularname">apiexport&lt;/dd>
&lt;dt class="pluralname">Plural name:&lt;/dt>
&lt;dd class="pluralname">apiexports&lt;/dd>
&lt;dt class="scope">Scope:&lt;/dt>
&lt;dd class="scope">Cluster&lt;/dd>
&lt;dt class="versions">Versions:&lt;/dt>
&lt;dd class="versions">&lt;a class="version" href="#v1alpha1" title="Show schema for version v1alpha1">v1alpha1&lt;/a>&lt;/dd>
&lt;/dl>
&lt;div class="crd-schema-version">
&lt;h2 id="v1alpha1">Version v1alpha1&lt;/h2>
&lt;h3 id="property-details-v1alpha1">Properties&lt;/h3>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.apiVersion">.apiVersion&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: &lt;a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources">https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources&lt;/a>&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.kind">.kind&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: &lt;a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds">https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds&lt;/a>&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.metadata">.metadata&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec">.spec&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Spec holds the desired state.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.identity">.spec.identity&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>identity points to a secret that contains the API identity in the &amp;lsquo;key&amp;rsquo; file. The API identity determines an unique etcd prefix for objects stored via this APIExport.
Different APIExport in a workspace can share a common identity, or have different ones. The identity (the secret) can also be transferred to another workspace when the APIExport is moved.
The identity is a secret of the API provider. The APIBindings referencing this APIExport will store a derived, non-sensitive value of this identity.
The identity of an APIExport cannot be changed. A derived, non-sensitive value of the identity key is stored in the APIExport status and this value is immutable.
The identity is defaulted. A secret with the name of the APIExport is automatically created.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.identity.secretRef">.spec.identity.secretRef&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>secretRef is a reference to a secret that contains the API identity in the &amp;lsquo;key&amp;rsquo; file.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.identity.secretRef.name">.spec.identity.secretRef.name&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>name is unique within a namespace to reference a secret resource.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.identity.secretRef.namespace">.spec.identity.secretRef.namespace&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>namespace defines the space within which the secret name must be unique.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.latestResourceSchemas">.spec.latestResourceSchemas&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>latestResourceSchemas records the latest APIResourceSchemas that are exposed with this APIExport.
The schemas can be changed in the life-cycle of the APIExport. These changes have no effect on existing APIBindings, but only on newly bound ones.
For updating existing APIBindings, use an APIDeployment keeping bound workspaces up-to-date.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.latestResourceSchemas[*]">.spec.latestResourceSchemas[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.maximalPermissionPolicy">.spec.maximalPermissionPolicy&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>maximalPermissionPolicy will allow for a service provider to set an upper bound on what is allowed for a consumer of this API. If the policy is not set, no upper bound is applied, i.e the consuming users can do whatever the user workspace allows the user to do.
The policy consists of RBAC (Cluster)Roles and (Cluster)Bindings. A request of a user in a workspace that binds to this APIExport via an APIBinding is additionally checked against these rules, with the user name and the groups prefixed with &lt;code>apis.kcp.io:binding:&lt;/code>.
For example: assume a user &lt;code>adam&lt;/code> with groups &lt;code>system:authenticated&lt;/code> and &lt;code>a-team&lt;/code> binds to this APIExport in another workspace root:org:ws. Then a request in that workspace against a resource of this APIExport is authorized as every other request in that workspace, but in addition the RBAC policy here in the APIExport workspace has to grant access to the user &lt;code>apis.kcp.io:binding:adam&lt;/code> with the groups &lt;code>apis.kcp.io:binding:system:authenticated&lt;/code> and &lt;code>apis.kcp.io:binding:a-team&lt;/code>.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.maximalPermissionPolicy.local">.spec.maximalPermissionPolicy.local&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>local is the policy that is defined in same workspace as the API Export.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.permissionClaims">.spec.permissionClaims&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>permissionClaims make resources available in APIExport&amp;rsquo;s virtual workspace that are not part of the actual APIExport resources.
PermissionClaims are optional and should be the least access necessary to complete the functions that the service provider needs. Access is asked for on a GroupResource + identity basis.
PermissionClaims must be accepted by the user&amp;rsquo;s explicit acknowledgement. Hence, when claims change, the respecting objects are not visible immediately.
PermissionClaims overlapping with the APIExport resources are ignored.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.permissionClaims[*]">.spec.permissionClaims[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>PermissionClaim identifies an object by GR and identity hash. Its purpose is to determine the added permissions that a service provider may request and that a consumer may accept and allow the service provider access to.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.permissionClaims[*].all">.spec.permissionClaims[*].all&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">boolean&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>all claims all resources for the given group/resource. This is mutually exclusive with resourceSelector.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.permissionClaims[*].group">.spec.permissionClaims[*].group&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>group is the name of an API group. For core groups this is the empty string &amp;lsquo;&amp;ldquo;&amp;rdquo;&amp;rsquo;.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.permissionClaims[*].identityHash">.spec.permissionClaims[*].identityHash&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>This is the identity for a given APIExport that the APIResourceSchema belongs to. The hash can be found on APIExport and APIResourceSchema&amp;rsquo;s status. It will be empty for core types. Note that one must look this up for a particular KCP instance.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.permissionClaims[*].resource">.spec.permissionClaims[*].resource&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>resource is the name of the resource. Note: it is worth noting that you can not ask for permissions for resource provided by a CRD not provided by an api export.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.permissionClaims[*].resourceSelector">.spec.permissionClaims[*].resourceSelector&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>resourceSelector is a list of claimed resource selectors.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-4">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.permissionClaims[*].resourceSelector[*]">.spec.permissionClaims[*].resourceSelector[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-5">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.permissionClaims[*].resourceSelector[*].name">.spec.permissionClaims[*].resourceSelector[*].name&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>name of an object within a claimed group/resource. It matches the metadata.name field of the underlying object. If namespace is unset, all objects matching that name will be claimed.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-5">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.permissionClaims[*].resourceSelector[*].namespace">.spec.permissionClaims[*].resourceSelector[*].namespace&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>namespace containing the named object. Matches metadata.namespace field. If &amp;ldquo;name&amp;rdquo; is unset, all objects from the namespace are being claimed.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status">.status&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Status communicates the observed state.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions">.status.conditions&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>conditions is a list of conditions that apply to the APIExport.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*]">.status.conditions[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Condition defines an observation of a object operational state.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].lastTransitionTime">.status.conditions[*].lastTransitionTime&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].message">.status.conditions[*].message&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>A human readable message indicating details about the transition. This field may be empty.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].reason">.status.conditions[*].reason&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>The reason for the condition&amp;rsquo;s last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].severity">.status.conditions[*].severity&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].status">.status.conditions[*].status&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Status of the condition, one of True, False, Unknown.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].type">.status.conditions[*].type&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.identityHash">.status.identityHash&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>identityHash is the hash of the API identity key of this APIExport. This value is immutable as soon as it is set.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.virtualWorkspaces">.status.virtualWorkspaces&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>virtualWorkspaces contains all APIExport virtual workspace URLs.
Deprecated: use APIExportEndpointSlice.status.endpoints instead&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.virtualWorkspaces[*]">.status.virtualWorkspaces[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.virtualWorkspaces[*].url">.status.virtualWorkspaces[*].url&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>url is an APIExport virtual workspace URL.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>V0.10.0: APIExportEndpointSlice CRD schema reference (group apis.kcp.io)</title><link>http://kcp-dev.github.io/kcp/v0.10.0/crd-reference/apiexportendpointslices.apis.kcp.io/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://kcp-dev.github.io/kcp/v0.10.0/crd-reference/apiexportendpointslices.apis.kcp.io/</guid><description>
&lt;h2 id="apiexportendpointslice">APIExportEndpointSlice&lt;/h2>
&lt;dl class="crd-meta">
&lt;dt class="fullname">Full name:&lt;/dt>
&lt;dd class="fullname">apiexportendpointslices.apis.kcp.io&lt;/dd>
&lt;dt class="groupname">Group:&lt;/dt>
&lt;dd class="groupname">apis.kcp.io&lt;/dd>
&lt;dt class="singularname">Singular name:&lt;/dt>
&lt;dd class="singularname">apiexportendpointslice&lt;/dd>
&lt;dt class="pluralname">Plural name:&lt;/dt>
&lt;dd class="pluralname">apiexportendpointslices&lt;/dd>
&lt;dt class="scope">Scope:&lt;/dt>
&lt;dd class="scope">Cluster&lt;/dd>
&lt;dt class="versions">Versions:&lt;/dt>
&lt;dd class="versions">&lt;a class="version" href="#v1alpha1" title="Show schema for version v1alpha1">v1alpha1&lt;/a>&lt;/dd>
&lt;/dl>
&lt;div class="crd-schema-version">
&lt;h2 id="v1alpha1">Version v1alpha1&lt;/h2>
&lt;h3 id="property-details-v1alpha1">Properties&lt;/h3>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.apiVersion">.apiVersion&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: &lt;a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources">https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources&lt;/a>&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.kind">.kind&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: &lt;a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds">https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds&lt;/a>&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.metadata">.metadata&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec">.spec&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>spec holds the desired state: - the targetted APIExport - an optional partition for filtering&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.export">.spec.export&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>export points to the API export.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.export.name">.spec.export.name&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>name is the name of the APIExport that describes the API.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.export.path">.spec.export.path&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>path is a logical cluster path where the APIExport is defined. If the path is unset, the logical cluster of the APIBinding is used.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.partition">.spec.partition&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>partition (optional) points to a partition that is used for filtering the endpoints of the APIExport part of the slice.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status">.status&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>status communicates the observed state: the filtered list of endpoints for the APIExport service.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions">.status.conditions&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>conditions is a list of conditions that apply to the APIExportEndpointSlice.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*]">.status.conditions[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Condition defines an observation of a object operational state.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].lastTransitionTime">.status.conditions[*].lastTransitionTime&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].message">.status.conditions[*].message&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>A human readable message indicating details about the transition. This field may be empty.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].reason">.status.conditions[*].reason&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>The reason for the condition&amp;rsquo;s last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].severity">.status.conditions[*].severity&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].status">.status.conditions[*].status&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Status of the condition, one of True, False, Unknown.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].type">.status.conditions[*].type&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.endpoints">.status.endpoints&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>endpoints contains all the URLs of the APIExport service.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.endpoints[*]">.status.endpoints[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>APIExportEndpoint contains the endpoint information of an APIExport service for a specific shard.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.endpoints[*].url">.status.endpoints[*].url&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>url is an APIExport virtual workspace URL.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>V0.10.0: APIResourceImport CRD schema reference (group apiresource.kcp.io)</title><link>http://kcp-dev.github.io/kcp/v0.10.0/crd-reference/apiresourceimports.apiresource.kcp.io/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://kcp-dev.github.io/kcp/v0.10.0/crd-reference/apiresourceimports.apiresource.kcp.io/</guid><description>
&lt;h2 id="apiresourceimport">APIResourceImport&lt;/h2>
&lt;dl class="crd-meta">
&lt;dt class="fullname">Full name:&lt;/dt>
&lt;dd class="fullname">apiresourceimports.apiresource.kcp.io&lt;/dd>
&lt;dt class="groupname">Group:&lt;/dt>
&lt;dd class="groupname">apiresource.kcp.io&lt;/dd>
&lt;dt class="singularname">Singular name:&lt;/dt>
&lt;dd class="singularname">apiresourceimport&lt;/dd>
&lt;dt class="pluralname">Plural name:&lt;/dt>
&lt;dd class="pluralname">apiresourceimports&lt;/dd>
&lt;dt class="scope">Scope:&lt;/dt>
&lt;dd class="scope">Cluster&lt;/dd>
&lt;dt class="versions">Versions:&lt;/dt>
&lt;dd class="versions">&lt;a class="version" href="#v1alpha1" title="Show schema for version v1alpha1">v1alpha1&lt;/a>&lt;/dd>
&lt;/dl>
&lt;div class="crd-schema-version">
&lt;h2 id="v1alpha1">Version v1alpha1&lt;/h2>
&lt;h3 id="property-details-v1alpha1">Properties&lt;/h3>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.apiVersion">.apiVersion&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: &lt;a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources">https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources&lt;/a>&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.kind">.kind&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: &lt;a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds">https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds&lt;/a>&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.metadata">.metadata&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec">.spec&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>APIResourceImportSpec holds the desired state of the APIResourceImport (from the client).&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.categories">.spec.categories&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>categories is a list of grouped resources this custom resource belongs to (e.g. &amp;lsquo;all&amp;rsquo;). This is published in API discovery documents, and used by clients to support invocations like &lt;code>kubectl get all&lt;/code>.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.categories[*]">.spec.categories[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.columnDefinitions">.spec.columnDefinitions&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.columnDefinitions[*]">.spec.columnDefinitions[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.columnDefinitions[*].description">.spec.columnDefinitions[*].description&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>description is a human readable description of this column.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.columnDefinitions[*].format">.spec.columnDefinitions[*].format&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>format is an optional OpenAPI type modifier for this column. A format modifies the type and imposes additional rules, like date or time formatting for a string. The &amp;lsquo;name&amp;rsquo; format is applied to the primary identifier column which has type &amp;lsquo;string&amp;rsquo; to assist in clients identifying column is the resource name. See &lt;a href="https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types">https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types&lt;/a> for more.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.columnDefinitions[*].jsonPath">.spec.columnDefinitions[*].jsonPath&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.columnDefinitions[*].name">.spec.columnDefinitions[*].name&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>name is a human readable name for the column.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.columnDefinitions[*].priority">.spec.columnDefinitions[*].priority&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">integer&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>priority is an integer defining the relative importance of this column compared to others. Lower numbers are considered higher priority. Columns that may be omitted in limited space scenarios should be given a higher priority.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.columnDefinitions[*].type">.spec.columnDefinitions[*].type&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>type is an OpenAPI type definition for this column, such as number, integer, string, or array. See &lt;a href="https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types">https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types&lt;/a> for more.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.groupVersion">.spec.groupVersion&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.groupVersion.group">.spec.groupVersion.group&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.groupVersion.version">.spec.groupVersion.version&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.kind">.spec.kind&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>kind is the serialized kind of the resource. It is normally CamelCase and singular. Custom resource instances will use this value as the &lt;code>kind&lt;/code> attribute in API calls.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.listKind">.spec.listKind&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>listKind is the serialized kind of the list for this resource. Defaults to &amp;ldquo;&lt;code>kind&lt;/code>List&amp;rdquo;.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.location">.spec.location&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Locaton the API resource is imported from This field is required&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.openAPIV3Schema">.spec.openAPIV3Schema&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.plural">.spec.plural&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>plural is the plural name of the resource to serve. The custom resources are served under &lt;code>/apis/&amp;lt;group&amp;gt;/&amp;lt;version&amp;gt;/.../&amp;lt;plural&amp;gt;&lt;/code>. Must match the name of the CustomResourceDefinition (in the form &lt;code>&amp;lt;names.plural&amp;gt;.&amp;lt;group&amp;gt;&lt;/code>). Must be all lowercase.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.schemaUpdateStrategy">.spec.schemaUpdateStrategy&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>SchemaUpdateStrategy defines the schema update strategy for this API Resource import. Default value is UpdateUnpublished&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.scope">.spec.scope&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>ResourceScope is an enum defining the different scopes available to a custom resource&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.shortNames">.spec.shortNames&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>shortNames are short names for the resource, exposed in API discovery documents, and used by clients to support invocations like &lt;code>kubectl get &amp;lt;shortname&amp;gt;&lt;/code>. It must be all lowercase.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.shortNames[*]">.spec.shortNames[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.singular">.spec.singular&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>singular is the singular name of the resource. It must be all lowercase. Defaults to lowercased &lt;code>kind&lt;/code>.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.subResources">.spec.subResources&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.subResources[*]">.spec.subResources[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.subResources[*].name">.spec.subResources[*].name&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status">.status&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>APIResourceImportStatus communicates the observed state of the APIResourceImport (from the controller).&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions">.status.conditions&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*]">.status.conditions[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>APIResourceImportCondition contains details for the current condition of this negotiated api resource.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].lastTransitionTime">.status.conditions[*].lastTransitionTime&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Last time the condition transitioned from one status to another.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].message">.status.conditions[*].message&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Human-readable message indicating details about last transition.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].reason">.status.conditions[*].reason&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Unique, one-word, CamelCase reason for the condition&amp;rsquo;s last transition.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].status">.status.conditions[*].status&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Status is the status of the condition. Can be True, False, Unknown.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].type">.status.conditions[*].type&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Type is the type of the condition. Types include Compatible.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>V0.10.0: APIResourceSchema CRD schema reference (group apis.kcp.io)</title><link>http://kcp-dev.github.io/kcp/v0.10.0/crd-reference/apiresourceschemas.apis.kcp.io/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://kcp-dev.github.io/kcp/v0.10.0/crd-reference/apiresourceschemas.apis.kcp.io/</guid><description>
&lt;h2 id="apiresourceschema">APIResourceSchema&lt;/h2>
&lt;dl class="crd-meta">
&lt;dt class="fullname">Full name:&lt;/dt>
&lt;dd class="fullname">apiresourceschemas.apis.kcp.io&lt;/dd>
&lt;dt class="groupname">Group:&lt;/dt>
&lt;dd class="groupname">apis.kcp.io&lt;/dd>
&lt;dt class="singularname">Singular name:&lt;/dt>
&lt;dd class="singularname">apiresourceschema&lt;/dd>
&lt;dt class="pluralname">Plural name:&lt;/dt>
&lt;dd class="pluralname">apiresourceschemas&lt;/dd>
&lt;dt class="scope">Scope:&lt;/dt>
&lt;dd class="scope">Cluster&lt;/dd>
&lt;dt class="versions">Versions:&lt;/dt>
&lt;dd class="versions">&lt;a class="version" href="#v1alpha1" title="Show schema for version v1alpha1">v1alpha1&lt;/a>&lt;/dd>
&lt;/dl>
&lt;div class="crd-schema-version">
&lt;h2 id="v1alpha1">Version v1alpha1&lt;/h2>
&lt;h3 id="property-details-v1alpha1">Properties&lt;/h3>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.apiVersion">.apiVersion&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: &lt;a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources">https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources&lt;/a>&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.kind">.kind&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: &lt;a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds">https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds&lt;/a>&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.metadata">.metadata&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec">.spec&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Spec holds the desired state.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.group">.spec.group&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>group is the API group of the defined custom resource. Empty string means the core API group. The resources are served under &lt;code>/apis/&amp;lt;group&amp;gt;/...&lt;/code> or &lt;code>/api&lt;/code> for the core group.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.names">.spec.names&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>names specify the resource and kind names for the custom resource.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.names.categories">.spec.names.categories&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>categories is a list of grouped resources this custom resource belongs to (e.g. &amp;lsquo;all&amp;rsquo;). This is published in API discovery documents, and used by clients to support invocations like &lt;code>kubectl get all&lt;/code>.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.names.categories[*]">.spec.names.categories[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.names.kind">.spec.names.kind&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>kind is the serialized kind of the resource. It is normally CamelCase and singular. Custom resource instances will use this value as the &lt;code>kind&lt;/code> attribute in API calls.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.names.listKind">.spec.names.listKind&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>listKind is the serialized kind of the list for this resource. Defaults to &amp;ldquo;&lt;code>kind&lt;/code>List&amp;rdquo;.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.names.plural">.spec.names.plural&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>plural is the plural name of the resource to serve. The custom resources are served under &lt;code>/apis/&amp;lt;group&amp;gt;/&amp;lt;version&amp;gt;/.../&amp;lt;plural&amp;gt;&lt;/code>. Must match the name of the CustomResourceDefinition (in the form &lt;code>&amp;lt;names.plural&amp;gt;.&amp;lt;group&amp;gt;&lt;/code>). Must be all lowercase.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.names.shortNames">.spec.names.shortNames&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>shortNames are short names for the resource, exposed in API discovery documents, and used by clients to support invocations like &lt;code>kubectl get &amp;lt;shortname&amp;gt;&lt;/code>. It must be all lowercase.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.names.shortNames[*]">.spec.names.shortNames[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.names.singular">.spec.names.singular&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>singular is the singular name of the resource. It must be all lowercase. Defaults to lowercased &lt;code>kind&lt;/code>.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.scope">.spec.scope&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>scope indicates whether the defined custom resource is cluster- or namespace-scoped. Allowed values are &lt;code>Cluster&lt;/code> and &lt;code>Namespaced&lt;/code>.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.versions">.spec.versions&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>versions is the API version of the defined custom resource.
Note: the OpenAPI v3 schemas must be equal for all versions until CEL version migration is supported.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.versions[*]">.spec.versions[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>APIResourceVersion describes one API version of a resource.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.versions[*].additionalPrinterColumns">.spec.versions[*].additionalPrinterColumns&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>additionalPrinterColumns specifies additional columns returned in Table output. See &lt;a href="https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables">https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables&lt;/a> for details. If no columns are specified, a single column displaying the age of the custom resource is used.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-4">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.versions[*].additionalPrinterColumns[*]">.spec.versions[*].additionalPrinterColumns[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>CustomResourceColumnDefinition specifies a column for server side printing.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-5">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.versions[*].additionalPrinterColumns[*].description">.spec.versions[*].additionalPrinterColumns[*].description&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>description is a human readable description of this column.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-5">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.versions[*].additionalPrinterColumns[*].format">.spec.versions[*].additionalPrinterColumns[*].format&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>format is an optional OpenAPI type definition for this column. The &amp;lsquo;name&amp;rsquo; format is applied to the primary identifier column to assist in clients identifying column is the resource name. See &lt;a href="https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types">https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types&lt;/a> for details.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-5">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.versions[*].additionalPrinterColumns[*].jsonPath">.spec.versions[*].additionalPrinterColumns[*].jsonPath&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>jsonPath is a simple JSON path (i.e. with array notation) which is evaluated against each custom resource to produce the value for this column.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-5">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.versions[*].additionalPrinterColumns[*].name">.spec.versions[*].additionalPrinterColumns[*].name&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>name is a human readable name for the column.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-5">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.versions[*].additionalPrinterColumns[*].priority">.spec.versions[*].additionalPrinterColumns[*].priority&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">integer&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>priority is an integer defining the relative importance of this column compared to others. Lower numbers are considered higher priority. Columns that may be omitted in limited space scenarios should be given a priority greater than 0.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-5">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.versions[*].additionalPrinterColumns[*].type">.spec.versions[*].additionalPrinterColumns[*].type&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>type is an OpenAPI type definition for this column. See &lt;a href="https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types">https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types&lt;/a> for details.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.versions[*].deprecated">.spec.versions[*].deprecated&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">boolean&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>deprecated indicates this version of the custom resource API is deprecated. When set to true, API requests to this version receive a warning header in the server response. Defaults to false.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.versions[*].deprecationWarning">.spec.versions[*].deprecationWarning&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>deprecationWarning overrides the default warning returned to API clients. May only be set when &lt;code>deprecated&lt;/code> is true. The default warning indicates this version is deprecated and recommends use of the newest served version of equal or greater stability, if one exists.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.versions[*].name">.spec.versions[*].name&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>name is the version name, e.g. “v1”, “v2beta1”, etc. The custom resources are served under this version at &lt;code>/apis/&amp;lt;group&amp;gt;/&amp;lt;version&amp;gt;/...&lt;/code> if &lt;code>served&lt;/code> is true.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.versions[*].schema">.spec.versions[*].schema&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>schema describes the structural schema used for validation, pruning, and defaulting of this version of the custom resource.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.versions[*].served">.spec.versions[*].served&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">boolean&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>served is a flag enabling/disabling this version from being served via REST APIs&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.versions[*].storage">.spec.versions[*].storage&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">boolean&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>storage indicates this version should be used when persisting custom resources to storage. There must be exactly one version with storage=true.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.versions[*].subresources">.spec.versions[*].subresources&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>subresources specify what subresources this version of the defined custom resource have.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-4">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.versions[*].subresources.scale">.spec.versions[*].subresources.scale&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>scale indicates the custom resource should serve a &lt;code>/scale&lt;/code> subresource that returns an &lt;code>autoscaling/v1&lt;/code> Scale object.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-5">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.versions[*].subresources.scale.labelSelectorPath">.spec.versions[*].subresources.scale.labelSelectorPath&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>labelSelectorPath defines the JSON path inside of a custom resource that corresponds to Scale &lt;code>status.selector&lt;/code>. Only JSON paths without the array notation are allowed. Must be a JSON Path under &lt;code>.status&lt;/code> or &lt;code>.spec&lt;/code>. Must be set to work with HorizontalPodAutoscaler. The field pointed by this JSON path must be a string field (not a complex selector struct) which contains a serialized label selector in string form. More info: &lt;a href="https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions#scale-subresource">https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions#scale-subresource&lt;/a> If there is no value under the given path in the custom resource, the &lt;code>status.selector&lt;/code> value in the &lt;code>/scale&lt;/code> subresource will default to the empty string.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-5">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.versions[*].subresources.scale.specReplicasPath">.spec.versions[*].subresources.scale.specReplicasPath&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>specReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale &lt;code>spec.replicas&lt;/code>. Only JSON paths without the array notation are allowed. Must be a JSON Path under &lt;code>.spec&lt;/code>. If there is no value under the given path in the custom resource, the &lt;code>/scale&lt;/code> subresource will return an error on GET.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-5">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.versions[*].subresources.scale.statusReplicasPath">.spec.versions[*].subresources.scale.statusReplicasPath&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>statusReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale &lt;code>status.replicas&lt;/code>. Only JSON paths without the array notation are allowed. Must be a JSON Path under &lt;code>.status&lt;/code>. If there is no value under the given path in the custom resource, the &lt;code>status.replicas&lt;/code> value in the &lt;code>/scale&lt;/code> subresource will default to 0.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-4">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.versions[*].subresources.status">.spec.versions[*].subresources.status&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>status indicates the custom resource should serve a &lt;code>/status&lt;/code> subresource. When enabled: 1. requests to the custom resource primary endpoint ignore changes to the &lt;code>status&lt;/code> stanza of the object. 2. requests to the custom resource &lt;code>/status&lt;/code> subresource ignore changes to anything other than the &lt;code>status&lt;/code> stanza of the object.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>V0.10.0: Location CRD schema reference (group scheduling.kcp.io)</title><link>http://kcp-dev.github.io/kcp/v0.10.0/crd-reference/locations.scheduling.kcp.io/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://kcp-dev.github.io/kcp/v0.10.0/crd-reference/locations.scheduling.kcp.io/</guid><description>
&lt;h2 id="location">Location&lt;/h2>
&lt;dl class="crd-meta">
&lt;dt class="fullname">Full name:&lt;/dt>
&lt;dd class="fullname">locations.scheduling.kcp.io&lt;/dd>
&lt;dt class="groupname">Group:&lt;/dt>
&lt;dd class="groupname">scheduling.kcp.io&lt;/dd>
&lt;dt class="singularname">Singular name:&lt;/dt>
&lt;dd class="singularname">location&lt;/dd>
&lt;dt class="pluralname">Plural name:&lt;/dt>
&lt;dd class="pluralname">locations&lt;/dd>
&lt;dt class="scope">Scope:&lt;/dt>
&lt;dd class="scope">Cluster&lt;/dd>
&lt;dt class="versions">Versions:&lt;/dt>
&lt;dd class="versions">&lt;a class="version" href="#v1alpha1" title="Show schema for version v1alpha1">v1alpha1&lt;/a>&lt;/dd>
&lt;/dl>
&lt;div class="crd-schema-version">
&lt;h2 id="v1alpha1">Version v1alpha1&lt;/h2>
&lt;h3 id="property-details-v1alpha1">Properties&lt;/h3>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.apiVersion">.apiVersion&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: &lt;a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources">https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources&lt;/a>&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.kind">.kind&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: &lt;a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds">https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds&lt;/a>&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.metadata">.metadata&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec">.spec&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>LocationSpec holds the desired state of the Location.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.availableSelectorLabels">.spec.availableSelectorLabels&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>availableSelectorLabels is a list of labels that can be used to select an instance at this location in a placement object.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.availableSelectorLabels[*]">.spec.availableSelectorLabels[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>AvailableSelectorLabel specifies a label with key name and possible values.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.availableSelectorLabels[*].description">.spec.availableSelectorLabels[*].description&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>description is a human readable description of the label.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.availableSelectorLabels[*].key">.spec.availableSelectorLabels[*].key&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>key is the name of the label.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.availableSelectorLabels[*].values">.spec.availableSelectorLabels[*].values&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>values are the possible values for this labels.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-4">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.availableSelectorLabels[*].values[*]">.spec.availableSelectorLabels[*].values[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>LabelValue specifies a value of a label.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.description">.spec.description&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>description is a human-readable description of the location.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.instanceSelector">.spec.instanceSelector&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>instanceSelector chooses the instances that will be part of this location.
Note that these labels are not what is shown in the Location objects to the user. Depending on context, both will match or won&amp;rsquo;t match.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.instanceSelector.matchExpressions">.spec.instanceSelector.matchExpressions&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>matchExpressions is a list of label selector requirements. The requirements are ANDed.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.instanceSelector.matchExpressions[*]">.spec.instanceSelector.matchExpressions[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-4">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.instanceSelector.matchExpressions[*].key">.spec.instanceSelector.matchExpressions[*].key&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>key is the label key that the selector applies to.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-4">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.instanceSelector.matchExpressions[*].operator">.spec.instanceSelector.matchExpressions[*].operator&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>operator represents a key&amp;rsquo;s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-4">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.instanceSelector.matchExpressions[*].values">.spec.instanceSelector.matchExpressions[*].values&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-5">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.instanceSelector.matchExpressions[*].values[*]">.spec.instanceSelector.matchExpressions[*].values[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.instanceSelector.matchLabels">.spec.instanceSelector.matchLabels&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &amp;ldquo;key&amp;rdquo;, the operator is &amp;ldquo;In&amp;rdquo;, and the values array contains only &amp;ldquo;value&amp;rdquo;. The requirements are ANDed.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.resource">.spec.resource&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>resource is the group-version-resource of the instances that are subject to this location.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.resource.group">.spec.resource.group&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>group is the name of an API group.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.resource.resource">.spec.resource.resource&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>resource is the name of the resource.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.resource.version">.spec.resource.version&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>version is the version of the API.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status">.status&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>LocationStatus defines the observed state of Location.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.availableInstances">.status.availableInstances&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">integer&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>available is the number of actual instances that are available at this location.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.instances">.status.instances&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">integer&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>instances is the number of actual instances at this location.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>V0.10.0: LogicalCluster CRD schema reference (group core.kcp.io)</title><link>http://kcp-dev.github.io/kcp/v0.10.0/crd-reference/logicalclusters.core.kcp.io/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://kcp-dev.github.io/kcp/v0.10.0/crd-reference/logicalclusters.core.kcp.io/</guid><description>
&lt;h2 id="logicalcluster">LogicalCluster&lt;/h2>
&lt;dl class="crd-meta">
&lt;dt class="fullname">Full name:&lt;/dt>
&lt;dd class="fullname">logicalclusters.core.kcp.io&lt;/dd>
&lt;dt class="groupname">Group:&lt;/dt>
&lt;dd class="groupname">core.kcp.io&lt;/dd>
&lt;dt class="singularname">Singular name:&lt;/dt>
&lt;dd class="singularname">logicalcluster&lt;/dd>
&lt;dt class="pluralname">Plural name:&lt;/dt>
&lt;dd class="pluralname">logicalclusters&lt;/dd>
&lt;dt class="scope">Scope:&lt;/dt>
&lt;dd class="scope">Cluster&lt;/dd>
&lt;dt class="versions">Versions:&lt;/dt>
&lt;dd class="versions">&lt;a class="version" href="#v1alpha1" title="Show schema for version v1alpha1">v1alpha1&lt;/a>&lt;/dd>
&lt;/dl>
&lt;div class="crd-schema-version">
&lt;h2 id="v1alpha1">Version v1alpha1&lt;/h2>
&lt;h3 id="property-details-v1alpha1">Properties&lt;/h3>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.apiVersion">.apiVersion&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: &lt;a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources">https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources&lt;/a>&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.kind">.kind&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: &lt;a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds">https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds&lt;/a>&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.metadata">.metadata&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.metadata.name">.metadata.name&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec">.spec&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>LogicalClusterSpec is the specification of the LogicalCluster resource.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.directlyDeletable">.spec.directlyDeletable&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">boolean&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>DirectlyDeletable indicates that this logical cluster can be directly deleted by the user from within by deleting the LogicalCluster object.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.initializers">.spec.initializers&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>initializers are set on creation by the system and copied to status when initialization starts.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.initializers[*]">.spec.initializers[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>LogicalClusterInitializer is a unique string corresponding to a logical cluster initialization controller.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.owner">.spec.owner&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>owner is a reference to a resource controlling the life-cycle of this logical cluster. On deletion of the LogicalCluster, the finalizer core.kcp.io/logicalcluster is removed from the owner.
When this object is deleted, but the owner is not deleted, the owner is deleted too.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.owner.apiVersion">.spec.owner.apiVersion&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>apiVersion is the group and API version of the owner.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.owner.cluster">.spec.owner.cluster&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>cluster is the logical cluster in which the owner is located.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.owner.name">.spec.owner.name&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>name is the name of the owner.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.owner.namespace">.spec.owner.namespace&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>namespace is the optional namespace of the owner.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.owner.resource">.spec.owner.resource&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>resource is API resource to access the owner.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.owner.uid">.spec.owner.uid&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>UID is the UID of the owner.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status">.status&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>LogicalClusterStatus communicates the observed state of the Workspace.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.URL">.status.URL&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>url is the address under which the Kubernetes-cluster-like endpoint can be found. This URL can be used to access the logical cluster with standard Kubernetes client libraries and command line tools.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions">.status.conditions&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Current processing state of the LogicalCluster.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*]">.status.conditions[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Condition defines an observation of a object operational state.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].lastTransitionTime">.status.conditions[*].lastTransitionTime&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].message">.status.conditions[*].message&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>A human readable message indicating details about the transition. This field may be empty.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].reason">.status.conditions[*].reason&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>The reason for the condition&amp;rsquo;s last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].severity">.status.conditions[*].severity&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].status">.status.conditions[*].status&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Status of the condition, one of True, False, Unknown.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].type">.status.conditions[*].type&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.initializers">.status.initializers&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>initializers are set on creation by the system and must be cleared by a controller before the logical cluster can be used. The LogicalCluster object will stay in the phase &amp;ldquo;Initializing&amp;rdquo; state until all initializers are cleared.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.initializers[*]">.status.initializers[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>LogicalClusterInitializer is a unique string corresponding to a logical cluster initialization controller.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.phase">.status.phase&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Phase of the logical cluster (Initializing, Ready).&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>V0.10.0: NegotiatedAPIResource CRD schema reference (group apiresource.kcp.io)</title><link>http://kcp-dev.github.io/kcp/v0.10.0/crd-reference/negotiatedapiresources.apiresource.kcp.io/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://kcp-dev.github.io/kcp/v0.10.0/crd-reference/negotiatedapiresources.apiresource.kcp.io/</guid><description>
&lt;h2 id="negotiatedapiresource">NegotiatedAPIResource&lt;/h2>
&lt;dl class="crd-meta">
&lt;dt class="fullname">Full name:&lt;/dt>
&lt;dd class="fullname">negotiatedapiresources.apiresource.kcp.io&lt;/dd>
&lt;dt class="groupname">Group:&lt;/dt>
&lt;dd class="groupname">apiresource.kcp.io&lt;/dd>
&lt;dt class="singularname">Singular name:&lt;/dt>
&lt;dd class="singularname">negotiatedapiresource&lt;/dd>
&lt;dt class="pluralname">Plural name:&lt;/dt>
&lt;dd class="pluralname">negotiatedapiresources&lt;/dd>
&lt;dt class="scope">Scope:&lt;/dt>
&lt;dd class="scope">Cluster&lt;/dd>
&lt;dt class="versions">Versions:&lt;/dt>
&lt;dd class="versions">&lt;a class="version" href="#v1alpha1" title="Show schema for version v1alpha1">v1alpha1&lt;/a>&lt;/dd>
&lt;/dl>
&lt;div class="crd-schema-version">
&lt;h2 id="v1alpha1">Version v1alpha1&lt;/h2>
&lt;h3 id="property-details-v1alpha1">Properties&lt;/h3>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.apiVersion">.apiVersion&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: &lt;a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources">https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources&lt;/a>&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.kind">.kind&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: &lt;a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds">https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds&lt;/a>&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.metadata">.metadata&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec">.spec&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>NegotiatedAPIResourceSpec holds the desired state of the NegotiatedAPIResource (from the client).&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.categories">.spec.categories&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>categories is a list of grouped resources this custom resource belongs to (e.g. &amp;lsquo;all&amp;rsquo;). This is published in API discovery documents, and used by clients to support invocations like &lt;code>kubectl get all&lt;/code>.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.categories[*]">.spec.categories[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.columnDefinitions">.spec.columnDefinitions&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.columnDefinitions[*]">.spec.columnDefinitions[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.columnDefinitions[*].description">.spec.columnDefinitions[*].description&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>description is a human readable description of this column.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.columnDefinitions[*].format">.spec.columnDefinitions[*].format&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>format is an optional OpenAPI type modifier for this column. A format modifies the type and imposes additional rules, like date or time formatting for a string. The &amp;lsquo;name&amp;rsquo; format is applied to the primary identifier column which has type &amp;lsquo;string&amp;rsquo; to assist in clients identifying column is the resource name. See &lt;a href="https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types">https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types&lt;/a> for more.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.columnDefinitions[*].jsonPath">.spec.columnDefinitions[*].jsonPath&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.columnDefinitions[*].name">.spec.columnDefinitions[*].name&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>name is a human readable name for the column.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.columnDefinitions[*].priority">.spec.columnDefinitions[*].priority&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">integer&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>priority is an integer defining the relative importance of this column compared to others. Lower numbers are considered higher priority. Columns that may be omitted in limited space scenarios should be given a higher priority.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.columnDefinitions[*].type">.spec.columnDefinitions[*].type&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>type is an OpenAPI type definition for this column, such as number, integer, string, or array. See &lt;a href="https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types">https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types&lt;/a> for more.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.groupVersion">.spec.groupVersion&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.groupVersion.group">.spec.groupVersion.group&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.groupVersion.version">.spec.groupVersion.version&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.kind">.spec.kind&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>kind is the serialized kind of the resource. It is normally CamelCase and singular. Custom resource instances will use this value as the &lt;code>kind&lt;/code> attribute in API calls.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.listKind">.spec.listKind&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>listKind is the serialized kind of the list for this resource. Defaults to &amp;ldquo;&lt;code>kind&lt;/code>List&amp;rdquo;.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.openAPIV3Schema">.spec.openAPIV3Schema&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.plural">.spec.plural&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>plural is the plural name of the resource to serve. The custom resources are served under &lt;code>/apis/&amp;lt;group&amp;gt;/&amp;lt;version&amp;gt;/.../&amp;lt;plural&amp;gt;&lt;/code>. Must match the name of the CustomResourceDefinition (in the form &lt;code>&amp;lt;names.plural&amp;gt;.&amp;lt;group&amp;gt;&lt;/code>). Must be all lowercase.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.publish">.spec.publish&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">boolean&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.scope">.spec.scope&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>ResourceScope is an enum defining the different scopes available to a custom resource&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.shortNames">.spec.shortNames&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>shortNames are short names for the resource, exposed in API discovery documents, and used by clients to support invocations like &lt;code>kubectl get &amp;lt;shortname&amp;gt;&lt;/code>. It must be all lowercase.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.shortNames[*]">.spec.shortNames[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.singular">.spec.singular&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>singular is the singular name of the resource. It must be all lowercase. Defaults to lowercased &lt;code>kind&lt;/code>.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.subResources">.spec.subResources&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.subResources[*]">.spec.subResources[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.subResources[*].name">.spec.subResources[*].name&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status">.status&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>NegotiatedAPIResourceStatus communicates the observed state of the NegotiatedAPIResource (from the controller).&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions">.status.conditions&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*]">.status.conditions[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>NegotiatedAPIResourceCondition contains details for the current condition of this negotiated api resource.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].lastTransitionTime">.status.conditions[*].lastTransitionTime&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Last time the condition transitioned from one status to another.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].message">.status.conditions[*].message&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Human-readable message indicating details about last transition.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].reason">.status.conditions[*].reason&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Unique, one-word, CamelCase reason for the condition&amp;rsquo;s last transition.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].status">.status.conditions[*].status&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Status is the status of the condition. Can be True, False, Unknown.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].type">.status.conditions[*].type&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Type is the type of the condition. Types include Submitted, Published, Refused and Enforced.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>V0.10.0: Partition CRD schema reference (group topology.kcp.io)</title><link>http://kcp-dev.github.io/kcp/v0.10.0/crd-reference/partitions.topology.kcp.io/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://kcp-dev.github.io/kcp/v0.10.0/crd-reference/partitions.topology.kcp.io/</guid><description>
&lt;h2 id="partition">Partition&lt;/h2>
&lt;dl class="crd-meta">
&lt;dt class="fullname">Full name:&lt;/dt>
&lt;dd class="fullname">partitions.topology.kcp.io&lt;/dd>
&lt;dt class="groupname">Group:&lt;/dt>
&lt;dd class="groupname">topology.kcp.io&lt;/dd>
&lt;dt class="singularname">Singular name:&lt;/dt>
&lt;dd class="singularname">partition&lt;/dd>
&lt;dt class="pluralname">Plural name:&lt;/dt>
&lt;dd class="pluralname">partitions&lt;/dd>
&lt;dt class="scope">Scope:&lt;/dt>
&lt;dd class="scope">Cluster&lt;/dd>
&lt;dt class="versions">Versions:&lt;/dt>
&lt;dd class="versions">&lt;a class="version" href="#v1alpha1" title="Show schema for version v1alpha1">v1alpha1&lt;/a>&lt;/dd>
&lt;/dl>
&lt;div class="crd-schema-version">
&lt;h2 id="v1alpha1">Version v1alpha1&lt;/h2>
&lt;h3 id="property-details-v1alpha1">Properties&lt;/h3>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.apiVersion">.apiVersion&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: &lt;a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources">https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources&lt;/a>&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.kind">.kind&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: &lt;a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds">https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds&lt;/a>&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.metadata">.metadata&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec">.spec&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>spec holds the desired state.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.selector">.spec.selector&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>selector (optional) is a label selector that filters shard targets.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.selector.matchExpressions">.spec.selector.matchExpressions&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>matchExpressions is a list of label selector requirements. The requirements are ANDed.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.selector.matchExpressions[*]">.spec.selector.matchExpressions[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-4">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.selector.matchExpressions[*].key">.spec.selector.matchExpressions[*].key&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>key is the label key that the selector applies to.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-4">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.selector.matchExpressions[*].operator">.spec.selector.matchExpressions[*].operator&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>operator represents a key&amp;rsquo;s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-4">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.selector.matchExpressions[*].values">.spec.selector.matchExpressions[*].values&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-5">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.selector.matchExpressions[*].values[*]">.spec.selector.matchExpressions[*].values[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.selector.matchLabels">.spec.selector.matchLabels&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &amp;ldquo;key&amp;rdquo;, the operator is &amp;ldquo;In&amp;rdquo;, and the values array contains only &amp;ldquo;value&amp;rdquo;. The requirements are ANDed.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>V0.10.0: PartitionSet CRD schema reference (group topology.kcp.io)</title><link>http://kcp-dev.github.io/kcp/v0.10.0/crd-reference/partitionsets.topology.kcp.io/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://kcp-dev.github.io/kcp/v0.10.0/crd-reference/partitionsets.topology.kcp.io/</guid><description>
&lt;h2 id="partitionset">PartitionSet&lt;/h2>
&lt;dl class="crd-meta">
&lt;dt class="fullname">Full name:&lt;/dt>
&lt;dd class="fullname">partitionsets.topology.kcp.io&lt;/dd>
&lt;dt class="groupname">Group:&lt;/dt>
&lt;dd class="groupname">topology.kcp.io&lt;/dd>
&lt;dt class="singularname">Singular name:&lt;/dt>
&lt;dd class="singularname">partitionset&lt;/dd>
&lt;dt class="pluralname">Plural name:&lt;/dt>
&lt;dd class="pluralname">partitionsets&lt;/dd>
&lt;dt class="scope">Scope:&lt;/dt>
&lt;dd class="scope">Cluster&lt;/dd>
&lt;dt class="versions">Versions:&lt;/dt>
&lt;dd class="versions">&lt;a class="version" href="#v1alpha1" title="Show schema for version v1alpha1">v1alpha1&lt;/a>&lt;/dd>
&lt;/dl>
&lt;div class="crd-schema-version">
&lt;h2 id="v1alpha1">Version v1alpha1&lt;/h2>
&lt;h3 id="property-details-v1alpha1">Properties&lt;/h3>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.apiVersion">.apiVersion&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: &lt;a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources">https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources&lt;/a>&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.kind">.kind&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: &lt;a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds">https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds&lt;/a>&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.metadata">.metadata&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec">.spec&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>spec holds the desired state.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.dimensions">.spec.dimensions&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>dimensions (optional) are used to group shards into partitions&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.dimensions[*]">.spec.dimensions[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.selector">.spec.selector&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>selector (optional) is a label selector that filters shard targets.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.selector.matchExpressions">.spec.selector.matchExpressions&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>matchExpressions is a list of label selector requirements. The requirements are ANDed.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.selector.matchExpressions[*]">.spec.selector.matchExpressions[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-4">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.selector.matchExpressions[*].key">.spec.selector.matchExpressions[*].key&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>key is the label key that the selector applies to.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-4">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.selector.matchExpressions[*].operator">.spec.selector.matchExpressions[*].operator&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>operator represents a key&amp;rsquo;s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-4">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.selector.matchExpressions[*].values">.spec.selector.matchExpressions[*].values&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-5">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.selector.matchExpressions[*].values[*]">.spec.selector.matchExpressions[*].values[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.selector.matchLabels">.spec.selector.matchLabels&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &amp;ldquo;key&amp;rdquo;, the operator is &amp;ldquo;In&amp;rdquo;, and the values array contains only &amp;ldquo;value&amp;rdquo;. The requirements are ANDed.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status">.status&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>status holds information about the current status&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.count">.status.count&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">integer&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>count is the total number of partitions.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>V0.10.0: Placement CRD schema reference (group scheduling.kcp.io)</title><link>http://kcp-dev.github.io/kcp/v0.10.0/crd-reference/placements.scheduling.kcp.io/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://kcp-dev.github.io/kcp/v0.10.0/crd-reference/placements.scheduling.kcp.io/</guid><description>
&lt;h2 id="placement">Placement&lt;/h2>
&lt;dl class="crd-meta">
&lt;dt class="fullname">Full name:&lt;/dt>
&lt;dd class="fullname">placements.scheduling.kcp.io&lt;/dd>
&lt;dt class="groupname">Group:&lt;/dt>
&lt;dd class="groupname">scheduling.kcp.io&lt;/dd>
&lt;dt class="singularname">Singular name:&lt;/dt>
&lt;dd class="singularname">placement&lt;/dd>
&lt;dt class="pluralname">Plural name:&lt;/dt>
&lt;dd class="pluralname">placements&lt;/dd>
&lt;dt class="scope">Scope:&lt;/dt>
&lt;dd class="scope">Cluster&lt;/dd>
&lt;dt class="versions">Versions:&lt;/dt>
&lt;dd class="versions">&lt;a class="version" href="#v1alpha1" title="Show schema for version v1alpha1">v1alpha1&lt;/a>&lt;/dd>
&lt;/dl>
&lt;div class="crd-schema-version">
&lt;h2 id="v1alpha1">Version v1alpha1&lt;/h2>
&lt;h3 id="property-details-v1alpha1">Properties&lt;/h3>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.apiVersion">.apiVersion&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: &lt;a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources">https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources&lt;/a>&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.kind">.kind&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: &lt;a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds">https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds&lt;/a>&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.metadata">.metadata&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec">.spec&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.locationResource">.spec.locationResource&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>locationResource is the group-version-resource of the instances that are subject to the locations to select.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.locationResource.group">.spec.locationResource.group&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>group is the name of an API group.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.locationResource.resource">.spec.locationResource.resource&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>resource is the name of the resource.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.locationResource.version">.spec.locationResource.version&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>version is the version of the API.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.locationSelectors">.spec.locationSelectors&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>locationSelectors represents a slice of label selector to select a location, these label selectors are logically ORed.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.locationSelectors[*]">.spec.locationSelectors[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.locationSelectors[*].matchExpressions">.spec.locationSelectors[*].matchExpressions&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>matchExpressions is a list of label selector requirements. The requirements are ANDed.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-4">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.locationSelectors[*].matchExpressions[*]">.spec.locationSelectors[*].matchExpressions[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-5">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.locationSelectors[*].matchExpressions[*].key">.spec.locationSelectors[*].matchExpressions[*].key&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>key is the label key that the selector applies to.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-5">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.locationSelectors[*].matchExpressions[*].operator">.spec.locationSelectors[*].matchExpressions[*].operator&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>operator represents a key&amp;rsquo;s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-5">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.locationSelectors[*].matchExpressions[*].values">.spec.locationSelectors[*].matchExpressions[*].values&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-6">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.locationSelectors[*].matchExpressions[*].values[*]">.spec.locationSelectors[*].matchExpressions[*].values[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.locationSelectors[*].matchLabels">.spec.locationSelectors[*].matchLabels&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &amp;ldquo;key&amp;rdquo;, the operator is &amp;ldquo;In&amp;rdquo;, and the values array contains only &amp;ldquo;value&amp;rdquo;. The requirements are ANDed.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.locationWorkspace">.spec.locationWorkspace&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>locationWorkspace is an absolute reference to a workspace for the location. If it is not set, the workspace of APIBinding will be used.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.namespaceSelector">.spec.namespaceSelector&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>namespaceSelector is a label selector to select ns. It match all ns by default, but can be specified to a certain set of ns.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.namespaceSelector.matchExpressions">.spec.namespaceSelector.matchExpressions&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>matchExpressions is a list of label selector requirements. The requirements are ANDed.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.namespaceSelector.matchExpressions[*]">.spec.namespaceSelector.matchExpressions[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-4">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.namespaceSelector.matchExpressions[*].key">.spec.namespaceSelector.matchExpressions[*].key&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>key is the label key that the selector applies to.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-4">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.namespaceSelector.matchExpressions[*].operator">.spec.namespaceSelector.matchExpressions[*].operator&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>operator represents a key&amp;rsquo;s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-4">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.namespaceSelector.matchExpressions[*].values">.spec.namespaceSelector.matchExpressions[*].values&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-5">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.namespaceSelector.matchExpressions[*].values[*]">.spec.namespaceSelector.matchExpressions[*].values[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.namespaceSelector.matchLabels">.spec.namespaceSelector.matchLabels&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &amp;ldquo;key&amp;rdquo;, the operator is &amp;ldquo;In&amp;rdquo;, and the values array contains only &amp;ldquo;value&amp;rdquo;. The requirements are ANDed.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status">.status&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions">.status.conditions&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Current processing state of the Placement.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*]">.status.conditions[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Condition defines an observation of a object operational state.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].lastTransitionTime">.status.conditions[*].lastTransitionTime&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].message">.status.conditions[*].message&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>A human readable message indicating details about the transition. This field may be empty.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].reason">.status.conditions[*].reason&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>The reason for the condition&amp;rsquo;s last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].severity">.status.conditions[*].severity&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].status">.status.conditions[*].status&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Status of the condition, one of True, False, Unknown.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].type">.status.conditions[*].type&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.phase">.status.phase&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>phase is the current phase of the placement&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.selectedLocation">.status.selectedLocation&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>selectedLocation is the location that a picked by this placement.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.selectedLocation.locationName">.status.selectedLocation.locationName&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Name of the Location.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.selectedLocation.path">.status.selectedLocation.path&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>path is an absolute reference to a workspace, e.g. root:org:ws. The workspace must be some ancestor or a child of some ancestor.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>V0.10.0: Shard CRD schema reference (group core.kcp.io)</title><link>http://kcp-dev.github.io/kcp/v0.10.0/crd-reference/shards.core.kcp.io/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://kcp-dev.github.io/kcp/v0.10.0/crd-reference/shards.core.kcp.io/</guid><description>
&lt;h2 id="shard">Shard&lt;/h2>
&lt;dl class="crd-meta">
&lt;dt class="fullname">Full name:&lt;/dt>
&lt;dd class="fullname">shards.core.kcp.io&lt;/dd>
&lt;dt class="groupname">Group:&lt;/dt>
&lt;dd class="groupname">core.kcp.io&lt;/dd>
&lt;dt class="singularname">Singular name:&lt;/dt>
&lt;dd class="singularname">shard&lt;/dd>
&lt;dt class="pluralname">Plural name:&lt;/dt>
&lt;dd class="pluralname">shards&lt;/dd>
&lt;dt class="scope">Scope:&lt;/dt>
&lt;dd class="scope">Cluster&lt;/dd>
&lt;dt class="versions">Versions:&lt;/dt>
&lt;dd class="versions">&lt;a class="version" href="#v1alpha1" title="Show schema for version v1alpha1">v1alpha1&lt;/a>&lt;/dd>
&lt;/dl>
&lt;div class="crd-schema-version">
&lt;h2 id="v1alpha1">Version v1alpha1&lt;/h2>
&lt;h3 id="property-details-v1alpha1">Properties&lt;/h3>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.apiVersion">.apiVersion&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: &lt;a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources">https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources&lt;/a>&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.kind">.kind&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: &lt;a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds">https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds&lt;/a>&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.metadata">.metadata&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec">.spec&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>ShardSpec holds the desired state of the Shard.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.baseURL">.spec.baseURL&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>baseURL is the address of the KCP shard for direct connections, e.g. by some front-proxy doing the fan-out to the shards.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.externalURL">.spec.externalURL&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>externalURL is the externally visible address presented to users in Workspace URLs. Changing this will break all existing logical clusters on that shard, i.e. existing kubeconfigs of clients will be invalid. Hence, when changing this value, the old URL used by clients must keep working.
The external address will not be unique if a front-proxy does a fan-out to shards, but all logical cluster clients will talk to the front-proxy. In that case, put the address of the front-proxy here.
Note that movement of shards is only possible (in the future) between shards that share a common external URL.
This will be defaulted to the value of the baseURL.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.virtualWorkspaceURL">.spec.virtualWorkspaceURL&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>virtualWorkspaceURL is the address of the virtual workspace apiserver associated with this shard. It can be a direct address, an address of a front-proxy or even an address of an LB. As of today this address is assigned to APIExports.
This will be defaulted to the value of the baseURL.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status">.status&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>ShardStatus communicates the observed state of the Shard.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.capacity">.status.capacity&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Set of integer resources that logical clusters can be scheduled into&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions">.status.conditions&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Current processing state of the Shard.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*]">.status.conditions[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Condition defines an observation of a object operational state.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].lastTransitionTime">.status.conditions[*].lastTransitionTime&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].message">.status.conditions[*].message&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>A human readable message indicating details about the transition. This field may be empty.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].reason">.status.conditions[*].reason&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>The reason for the condition&amp;rsquo;s last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].severity">.status.conditions[*].severity&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].status">.status.conditions[*].status&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Status of the condition, one of True, False, Unknown.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].type">.status.conditions[*].type&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>V0.10.0: SyncTarget CRD schema reference (group workload.kcp.io)</title><link>http://kcp-dev.github.io/kcp/v0.10.0/crd-reference/synctargets.workload.kcp.io/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://kcp-dev.github.io/kcp/v0.10.0/crd-reference/synctargets.workload.kcp.io/</guid><description>
&lt;h2 id="synctarget">SyncTarget&lt;/h2>
&lt;dl class="crd-meta">
&lt;dt class="fullname">Full name:&lt;/dt>
&lt;dd class="fullname">synctargets.workload.kcp.io&lt;/dd>
&lt;dt class="groupname">Group:&lt;/dt>
&lt;dd class="groupname">workload.kcp.io&lt;/dd>
&lt;dt class="singularname">Singular name:&lt;/dt>
&lt;dd class="singularname">synctarget&lt;/dd>
&lt;dt class="pluralname">Plural name:&lt;/dt>
&lt;dd class="pluralname">synctargets&lt;/dd>
&lt;dt class="scope">Scope:&lt;/dt>
&lt;dd class="scope">Cluster&lt;/dd>
&lt;dt class="versions">Versions:&lt;/dt>
&lt;dd class="versions">&lt;a class="version" href="#v1alpha1" title="Show schema for version v1alpha1">v1alpha1&lt;/a>&lt;/dd>
&lt;/dl>
&lt;div class="crd-schema-version">
&lt;h2 id="v1alpha1">Version v1alpha1&lt;/h2>
&lt;h3 id="property-details-v1alpha1">Properties&lt;/h3>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.apiVersion">.apiVersion&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: &lt;a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources">https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources&lt;/a>&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.kind">.kind&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: &lt;a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds">https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds&lt;/a>&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.metadata">.metadata&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.metadata.name">.metadata.name&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec">.spec&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Spec holds the desired state.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.cells">.spec.cells&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Cells is a set of labels to identify the cells the SyncTarget belongs to. SyncTargets with the same cells run as they are in the same physical cluster. Each key/value pair in the cells should be added and updated by service providers (i.e. a network provider updates one key/value, while the storage provider updates another.)&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.evictAfter">.spec.evictAfter&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>EvictAfter controls cluster schedulability of new and existing workloads. After the EvictAfter time, any workload scheduled to the cluster will be unassigned from the cluster. By default, workloads scheduled to the cluster are not evicted.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.supportedAPIExports">.spec.supportedAPIExports&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>SupportedAPIExports defines a set of APIExports supposed to be supported by this SyncTarget. The SyncTarget will be selected to deploy the workload only when the resource schema on the SyncTarget is compatible with the resource schema included in the exports. If it is not set, the kubernetes export in the same workspace will be used by default.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.supportedAPIExports[*]">.spec.supportedAPIExports[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>APIExportReference provides the fields necessary to resolve an APIExport.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.supportedAPIExports[*].export">.spec.supportedAPIExports[*].export&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>export is the name of the APIExport.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.supportedAPIExports[*].path">.spec.supportedAPIExports[*].path&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>path is the fully-qualified path to the workspace containing the APIExport. If it is empty, the current workspace is assumed.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.unschedulable">.spec.unschedulable&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">boolean&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Unschedulable controls cluster schedulability of new workloads. By default, cluster is schedulable.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status">.status&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Status communicates the observed state.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.allocatable">.status.allocatable&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Allocatable represents the resources that are available for scheduling.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.capacity">.status.capacity&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Capacity represents the total resources of the cluster.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions">.status.conditions&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Current processing state of the SyncTarget.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*]">.status.conditions[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Condition defines an observation of a object operational state.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].lastTransitionTime">.status.conditions[*].lastTransitionTime&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].message">.status.conditions[*].message&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>A human readable message indicating details about the transition. This field may be empty.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].reason">.status.conditions[*].reason&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>The reason for the condition&amp;rsquo;s last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].severity">.status.conditions[*].severity&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].status">.status.conditions[*].status&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Status of the condition, one of True, False, Unknown.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].type">.status.conditions[*].type&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.lastSyncerHeartbeatTime">.status.lastSyncerHeartbeatTime&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>A timestamp indicating when the syncer last reported status.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.syncedResources">.status.syncedResources&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>SyncedResources represents the resources that the syncer of the SyncTarget can sync. It MUST be updated by kcp server.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.syncedResources[*]">.status.syncedResources[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.syncedResources[*].group">.status.syncedResources[*].group&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>group is the name of an API group. For core groups this is the empty string &amp;lsquo;&amp;ldquo;&amp;rdquo;&amp;rsquo;.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.syncedResources[*].identityHash">.status.syncedResources[*].identityHash&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>identityHash is the identity for a given APIExport that the APIResourceSchema belongs to. The hash can be found on APIExport and APIResourceSchema&amp;rsquo;s status. It will be empty for core types.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.syncedResources[*].resource">.status.syncedResources[*].resource&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>resource is the name of the resource. Note: it is worth noting that you can not ask for permissions for resource provided by a CRD not provided by an api export.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.syncedResources[*].state">.status.syncedResources[*].state&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>state indicate whether the resources schema is compatible to the SyncTarget. It must be updated by syncer after checking the API compatibility on SyncTarget.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.syncedResources[*].versions">.status.syncedResources[*].versions&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>versions are the resource versions the syncer can choose to sync depending on availability on the downstream cluster. Conversion to the storage version, if necessary, will be done on the kcp side. The versions are ordered by precedence and the first version compatible is preferred by syncer.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-4">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.syncedResources[*].versions[*]">.status.syncedResources[*].versions[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.virtualWorkspaces">.status.virtualWorkspaces&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>VirtualWorkspaces contains all virtual workspace URLs.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.virtualWorkspaces[*]">.status.virtualWorkspaces[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.virtualWorkspaces[*].syncerURL">.status.virtualWorkspaces[*].syncerURL&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>SyncerURL is the URL of the syncer virtual workspace.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.virtualWorkspaces[*].upsyncerURL">.status.virtualWorkspaces[*].upsyncerURL&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>UpsyncerURL is the URL of the upsyncer virtual workspace.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>V0.10.0: Workspace CRD schema reference (group tenancy.kcp.io)</title><link>http://kcp-dev.github.io/kcp/v0.10.0/crd-reference/workspaces.tenancy.kcp.io/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://kcp-dev.github.io/kcp/v0.10.0/crd-reference/workspaces.tenancy.kcp.io/</guid><description>
&lt;h2 id="workspace">Workspace&lt;/h2>
&lt;dl class="crd-meta">
&lt;dt class="fullname">Full name:&lt;/dt>
&lt;dd class="fullname">workspaces.tenancy.kcp.io&lt;/dd>
&lt;dt class="groupname">Group:&lt;/dt>
&lt;dd class="groupname">tenancy.kcp.io&lt;/dd>
&lt;dt class="singularname">Singular name:&lt;/dt>
&lt;dd class="singularname">workspace&lt;/dd>
&lt;dt class="pluralname">Plural name:&lt;/dt>
&lt;dd class="pluralname">workspaces&lt;/dd>
&lt;dt class="scope">Scope:&lt;/dt>
&lt;dd class="scope">Cluster&lt;/dd>
&lt;dt class="versions">Versions:&lt;/dt>
&lt;dd class="versions">&lt;a class="version" href="#v1alpha1" title="Show schema for version v1alpha1">v1alpha1&lt;/a>&lt;/dd>
&lt;/dl>
&lt;div class="crd-schema-version">
&lt;h2 id="v1alpha1">Version v1alpha1&lt;/h2>
&lt;h3 id="property-details-v1alpha1">Properties&lt;/h3>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.apiVersion">.apiVersion&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: &lt;a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources">https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources&lt;/a>&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.kind">.kind&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: &lt;a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds">https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds&lt;/a>&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.metadata">.metadata&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.metadata.name">.metadata.name&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec">.spec&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>WorkspaceSpec holds the desired state of the Workspace.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.URL">.spec.URL&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>URL is the address under which the Kubernetes-cluster-like endpoint can be found. This URL can be used to access the workspace with standard Kubernetes client libraries and command line tools.
Set by the system.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.cluster">.spec.cluster&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>cluster is the name of the logical cluster this workspace is stored under.
Set by the system.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.shard">.spec.shard&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>location constraints where this workspace can be scheduled to.
If the no location is specified, an arbitrary location is chosen.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.shard.selector">.spec.shard.selector&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>selector is a label selector that filters workspace scheduling targets.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.shard.selector.matchExpressions">.spec.shard.selector.matchExpressions&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>matchExpressions is a list of label selector requirements. The requirements are ANDed.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-4">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.shard.selector.matchExpressions[*]">.spec.shard.selector.matchExpressions[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-5">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.shard.selector.matchExpressions[*].key">.spec.shard.selector.matchExpressions[*].key&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>key is the label key that the selector applies to.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-5">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.shard.selector.matchExpressions[*].operator">.spec.shard.selector.matchExpressions[*].operator&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>operator represents a key&amp;rsquo;s relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-5">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.shard.selector.matchExpressions[*].values">.spec.shard.selector.matchExpressions[*].values&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-6">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.shard.selector.matchExpressions[*].values[*]">.spec.shard.selector.matchExpressions[*].values[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.shard.selector.matchLabels">.spec.shard.selector.matchLabels&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &amp;ldquo;key&amp;rdquo;, the operator is &amp;ldquo;In&amp;rdquo;, and the values array contains only &amp;ldquo;value&amp;rdquo;. The requirements are ANDed.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.type">.spec.type&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>type defines properties of the workspace both on creation (e.g. initial resources and initially installed APIs) and during runtime (e.g. permissions). If no type is provided, the default type for the workspace in which this workspace is nesting will be used.
The type is a reference to a WorkspaceType in the listed workspace, but lower-cased. The WorkspaceType existence is validated at admission during creation. The type is immutable after creation. The use of a type is gated via the RBAC workspacetypes/use resource permission.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.type.name">.spec.type.name&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>name is the name of the WorkspaceType&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.type.path">.spec.type.path&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>path is an absolute reference to the workspace that owns this type, e.g. root:org:ws.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status">.status&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>WorkspaceStatus communicates the observed state of the Workspace.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions">.status.conditions&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Current processing state of the Workspace.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*]">.status.conditions[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Condition defines an observation of a object operational state.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].lastTransitionTime">.status.conditions[*].lastTransitionTime&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].message">.status.conditions[*].message&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>A human readable message indicating details about the transition. This field may be empty.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].reason">.status.conditions[*].reason&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>The reason for the condition&amp;rsquo;s last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].severity">.status.conditions[*].severity&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].status">.status.conditions[*].status&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Status of the condition, one of True, False, Unknown.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].type">.status.conditions[*].type&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.initializers">.status.initializers&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>initializers must be cleared by a controller before the workspace is ready and can be used.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.initializers[*]">.status.initializers[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>LogicalClusterInitializer is a unique string corresponding to a logical cluster initialization controller.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.phase">.status.phase&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Phase of the workspace (Scheduling, Initializing, Ready).&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>V0.10.0: WorkspaceType CRD schema reference (group tenancy.kcp.io)</title><link>http://kcp-dev.github.io/kcp/v0.10.0/crd-reference/workspacetypes.tenancy.kcp.io/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://kcp-dev.github.io/kcp/v0.10.0/crd-reference/workspacetypes.tenancy.kcp.io/</guid><description>
&lt;h2 id="workspacetype">WorkspaceType&lt;/h2>
&lt;dl class="crd-meta">
&lt;dt class="fullname">Full name:&lt;/dt>
&lt;dd class="fullname">workspacetypes.tenancy.kcp.io&lt;/dd>
&lt;dt class="groupname">Group:&lt;/dt>
&lt;dd class="groupname">tenancy.kcp.io&lt;/dd>
&lt;dt class="singularname">Singular name:&lt;/dt>
&lt;dd class="singularname">workspacetype&lt;/dd>
&lt;dt class="pluralname">Plural name:&lt;/dt>
&lt;dd class="pluralname">workspacetypes&lt;/dd>
&lt;dt class="scope">Scope:&lt;/dt>
&lt;dd class="scope">Cluster&lt;/dd>
&lt;dt class="versions">Versions:&lt;/dt>
&lt;dd class="versions">&lt;a class="version" href="#v1alpha1" title="Show schema for version v1alpha1">v1alpha1&lt;/a>&lt;/dd>
&lt;/dl>
&lt;div class="crd-schema-version">
&lt;h2 id="v1alpha1">Version v1alpha1&lt;/h2>
&lt;h3 id="property-details-v1alpha1">Properties&lt;/h3>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.apiVersion">.apiVersion&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: &lt;a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources">https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources&lt;/a>&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.kind">.kind&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: &lt;a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds">https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds&lt;/a>&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.metadata">.metadata&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.metadata.name">.metadata.name&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec">.spec&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.additionalWorkspaceLabels">.spec.additionalWorkspaceLabels&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>additionalWorkspaceLabels are a set of labels that will be added to a ClusterWorkspace on creation.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.defaultAPIBindings">.spec.defaultAPIBindings&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>defaultAPIBindings are the APIs to bind during initialization of workspaces created from this type. The APIBinding names will be generated dynamically.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.defaultAPIBindings[*]">.spec.defaultAPIBindings[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>APIExportReference provides the fields necessary to resolve an APIExport.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.defaultAPIBindings[*].export">.spec.defaultAPIBindings[*].export&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>export is the name of the APIExport.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.defaultAPIBindings[*].path">.spec.defaultAPIBindings[*].path&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>path is the fully-qualified path to the workspace containing the APIExport. If it is empty, the current workspace is assumed.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.defaultChildWorkspaceType">.spec.defaultChildWorkspaceType&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>defaultChildWorkspaceType is the WorkspaceType that will be used by default if another, nested ClusterWorkspace is created in a workspace of this type. When this field is unset, the user must specify a type when creating nested workspaces. Extending another WorkspaceType does not inherit its defaultChildWorkspaceType.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.defaultChildWorkspaceType.name">.spec.defaultChildWorkspaceType.name&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>name is the name of the WorkspaceType&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.defaultChildWorkspaceType.path">.spec.defaultChildWorkspaceType.path&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>path is an absolute reference to the workspace that owns this type, e.g. root:org:ws.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.extend">.spec.extend&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>extend is a list of other WorkspaceTypes whose initializers and limitAllowedChildren and limitAllowedParents this WorkspaceType is inheriting. By (transitively) extending another WorkspaceType, this WorkspaceType will be considered as that other type in evaluation of limitAllowedChildren and limitAllowedParents constraints.
A dependency cycle stop this WorkspaceType from being admitted as the type of a ClusterWorkspace.
A non-existing dependency stop this WorkspaceType from being admitted as the type of a ClusterWorkspace.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.extend.with">.spec.extend.with&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>with are WorkspaceTypes whose initializers are added to the list for the owning type, and for whom the owning type becomes an alias, as long as all of their required types are not mentioned in without.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.extend.with[*]">.spec.extend.with[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>WorkspaceTypeReference is a globally unique, fully qualified reference to a workspace type.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-4">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.extend.with[*].name">.spec.extend.with[*].name&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>name is the name of the WorkspaceType&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-4">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.extend.with[*].path">.spec.extend.with[*].path&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>path is an absolute reference to the workspace that owns this type, e.g. root:org:ws.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.initializer">.spec.initializer&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">boolean&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>initializer determines if this WorkspaceType has an associated initializing controller. These controllers are used to add functionality to a ClusterWorkspace; all controllers must finish their work before the ClusterWorkspace becomes ready for use.
One initializing controller is supported per WorkspaceType; the identifier for this initializer will be a colon-delimited string using the workspace in which the WorkspaceType is defined, and the type&amp;rsquo;s name. For example, if a WorkspaceType &lt;code>example&lt;/code> is created in the &lt;code>root:org&lt;/code> workspace, the implicit initializer name is &lt;code>root:org:Example&lt;/code>.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.limitAllowedChildren">.spec.limitAllowedChildren&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>limitAllowedChildren specifies constraints for sub-workspaces created in workspaces of this type. These are in addition to child constraints of types this one extends.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.limitAllowedChildren.none">.spec.limitAllowedChildren.none&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">boolean&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>none means that no type matches.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.limitAllowedChildren.types">.spec.limitAllowedChildren.types&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>types is a list of WorkspaceTypes that match. A workspace type extending another workspace type automatically is considered as that extended type as well (even transitively).
An empty list matches all types.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.limitAllowedChildren.types[*]">.spec.limitAllowedChildren.types[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>WorkspaceTypeReference is a globally unique, fully qualified reference to a workspace type.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-4">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.limitAllowedChildren.types[*].name">.spec.limitAllowedChildren.types[*].name&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>name is the name of the WorkspaceType&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-4">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.limitAllowedChildren.types[*].path">.spec.limitAllowedChildren.types[*].path&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>path is an absolute reference to the workspace that owns this type, e.g. root:org:ws.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.limitAllowedParents">.spec.limitAllowedParents&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>limitAllowedParents specifies constraints for the parent workspace that workspaces of this type are created in. These are in addition to parent constraints of types this one extends.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.limitAllowedParents.none">.spec.limitAllowedParents.none&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">boolean&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>none means that no type matches.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.limitAllowedParents.types">.spec.limitAllowedParents.types&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>types is a list of WorkspaceTypes that match. A workspace type extending another workspace type automatically is considered as that extended type as well (even transitively).
An empty list matches all types.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.limitAllowedParents.types[*]">.spec.limitAllowedParents.types[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>WorkspaceTypeReference is a globally unique, fully qualified reference to a workspace type.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-4">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.limitAllowedParents.types[*].name">.spec.limitAllowedParents.types[*].name&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>name is the name of the WorkspaceType&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-4">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.spec.limitAllowedParents.types[*].path">.spec.limitAllowedParents.types[*].path&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>path is an absolute reference to the workspace that owns this type, e.g. root:org:ws.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-0">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status">.status&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>WorkspaceTypeStatus defines the observed state of WorkspaceType.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions">.status.conditions&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>conditions is a list of conditions that apply to the APIExport.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*]">.status.conditions[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Condition defines an observation of a object operational state.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].lastTransitionTime">.status.conditions[*].lastTransitionTime&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].message">.status.conditions[*].message&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>A human readable message indicating details about the transition. This field may be empty.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].reason">.status.conditions[*].reason&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>The reason for the condition&amp;rsquo;s last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].severity">.status.conditions[*].severity&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].status">.status.conditions[*].status&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Status of the condition, one of True, False, Unknown.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.conditions[*].type">.status.conditions[*].type&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-1">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.virtualWorkspaces">.status.virtualWorkspaces&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">array&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>virtualWorkspaces contains all APIExport virtual workspace URLs.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-2">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.virtualWorkspaces[*]">.status.virtualWorkspaces[*]&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">object&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="property depth-3">
&lt;div class="property-header">
&lt;h3 class="property-path" id="v1alpha1-.status.virtualWorkspaces[*].url">.status.virtualWorkspaces[*].url&lt;/h3>
&lt;/div>
&lt;div class="property-body">
&lt;div class="property-meta">
&lt;span class="property-type">string&lt;/span>
&lt;span class="property-required">Required&lt;/span>
&lt;/div>
&lt;div class="property-description">
&lt;p>url is a WorkspaceType initialization virtual workspace URL.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item></channel></rss>